{"version":3,"file":"component---src-templates-blog-post-js-df8127cb5a9f7f836958.js","mappings":"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","sources":["webpack://my-thoughts/./src/components/SEO/index.tsx","webpack://my-thoughts/./src/components/ShareBox/index.tsx","webpack://my-thoughts/./src/components/Sidebar/Friend/index.tsx","webpack://my-thoughts/./src/components/Sidebar/LatestPost/index.tsx","webpack://my-thoughts/./src/components/Sidebar/Information/index.tsx","webpack://my-thoughts/./src/components/Sidebar/index.tsx","webpack://my-thoughts/./src/utils/image.ts","webpack://my-thoughts/./src/utils/index.ts","webpack://my-thoughts/./src/components/Content/index.tsx","webpack://my-thoughts/./src/components/Header/index.tsx","webpack://my-thoughts/./src/templates/blog-post.js","webpack://my-thoughts/./node_modules/lozad/dist/lozad.min.js"],"sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport config from '../../../configs';\n\nconst schemaOrgJSONLD = ({\n  url,\n  title,\n  siteTitleAlt,\n  isPost,\n  image,\n  description,\n}: PropTypes) => [\n  {\n    '@context': 'http://schema.org',\n    '@type': 'WebSite',\n    url,\n    name: title,\n    alternateName: siteTitleAlt || '',\n  },\n  isPost\n    ? {\n      '@context': 'http://schema.org',\n      '@type': 'BreadcrumbList',\n      itemListElement: [\n        {\n          '@type': 'ListItem',\n          position: 1,\n          item: {\n            '@id': url,\n            name: title,\n            image,\n          },\n        },\n      ],\n    }\n    : '',\n  isPost\n    ? {\n      '@context': 'http://schema.org',\n      '@type': 'BlogPosting',\n      url,\n      name: title,\n      alternateName: siteTitleAlt || '',\n      headline: title,\n      image: {\n        '@type': 'ImageObject',\n        url: image,\n      },\n      description,\n    }\n    : '',\n];\n\ntype PropTypes = {\n  url: string,\n  title: string,\n  description: string,\n  image: string,\n  siteTitleAlt: string,\n  isPost: string,\n};\n\nconst SEO: React.FC<PropTypes> = ({\n  url, title = config.title, description, image, siteTitleAlt, isPost,\n}) => (\n  <Helmet>\n    <title>{title}</title>\n    {/* General tags */}\n    <meta name=\"description\" content={description} />\n    <meta name=\"image\" content={image} />\n\n    {/* Schema.org tags */}\n    <script type=\"application/ld+json\">\n      {JSON.stringify(schemaOrgJSONLD({url, title, siteTitleAlt, isPost, image, description}))}\n    </script>\n\n    {/* OpenGraph tags */}\n    <meta property=\"og:url\" content={url} />\n    {isPost ? (\n      <meta property=\"og:type\" content=\"article\" />\n    ) : (\n      <meta property=\"og:type\" content=\"website\" />\n    )}\n    <meta property=\"og:title\" content={title} />\n    <meta property=\"og:description\" content={description} />\n    <meta property=\"og:image\" content={image} />\n  </Helmet>\n)\n\nexport default SEO;\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './index.scss';\n\nconst CommentButton = () => (\n  <a\n    className=\"share-button\"\n    style={{\n      lineHeight: '1.7rem',\n      color: '#337ab7',\n      paddingLeft: '0.15rem',\n    }}\n    href=\"#gitalk-container\"\n    onClick={() => {}}\n  >\n    <FontAwesomeIcon icon={['far', 'comment']} />\n  </a>\n);\n\ntype PropTypes = {\n  url: string,\n  hasCommentBox: boolean\n};\n\nconst ShareBox: React.FC<PropTypes> = ({ url, hasCommentBox = true }) => (\n  <div className=\"m-share-box\">\n    <a\n      href={`https://www.facebook.com/sharer/sharer.php?u=${url}`}\n      title=\"\"\n      className=\"share-button\"\n      onClick={() => {}}\n    >\n      <FontAwesomeIcon icon={['fab', 'facebook-f']} />\n    </a>\n    \n    {hasCommentBox && <CommentButton />}\n\n    <a\n      className=\"share-button\"\n      href=\"#header\"\n      onClick={() => {\n      }}\n      style={{\n        lineHeight: '1.7rem',\n        paddingLeft: '0.1rem',\n      }}\n    >\n      <FontAwesomeIcon icon={['fas', 'chevron-up']} />\n    </a>\n  </div>\n);\n\nexport default ShareBox;\n","import React from 'react';\n\nimport ExternalLink from '../../ExternalLink';\n\nimport config from '../../../../configs';\n\nimport './index.scss';\n\nconst { friends = [] } = config;\n\nconst Friend = () => (\n  <div className=\"friend\">\n    <p>友情链接</p>\n    {friends.map(friend => (\n      <ExternalLink\n        href={friend?.href}\n        title={friend?.title}\n        key={friend?.title}\n        rel=\"noopener\"\n      />\n    ))}\n  </div>\n);\n\nexport default Friend;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport './index.scss';\n\ntype PropTypes = {\n  posts: Record<any, any>[],\n};\nconst LatestPost = ({ posts = [] }) => {\n\n  return (\n    <div className=\"latest-post\">\n      <p>最新文章</p>\n      {posts.map(({ node }) => {\n        const toUrl = `/${node?.frontmatter?.url || node.frontmatter.slug || node.fields.slug}`;\n        return (\n          <Link\n            to={toUrl}\n            key={toUrl}\n          >\n            {node.frontmatter.title}\n          </Link>\n        )\n      })}\n    </div >\n  )\n};\n\nexport default LatestPost;\n","import React from 'react';\n\nimport Friend from '../Friend';\nimport LatestPost from '../LatestPost';\nimport './index.scss';\n\ntype PropTypes = {\n  totalCount: number\n  posts: [],\n};\n\n// eslint-disable-next-line react/prop-types\nconst Information: React.FC<PropTypes> = ({ totalCount, posts = []}) => (\n  <div className=\"d-none d-lg-block information my-2\">\n    <hr />\n    <p>\n      共&nbsp;\n      {totalCount}\n      &nbsp;篇文章\n    </p>\n    <hr />\n    <LatestPost posts={posts} />\n    <hr />\n    <Friend />\n  </div>\n);\n\nexport default Information;\n","import React from 'react';\nimport { Link, StaticQuery, graphql } from 'gatsby';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\n\nimport config from '../../../configs';\n\nimport Information from './Information';\n\nimport './index.scss';\n\nconst {\n  github,\n  name,\n  email,\n  iconUrl,\n  about,\n} = config;\n\ntype IconPropTypes = {\n  href: string,\n  icon: IconProp,\n};\n\ntype SidebarPropTypes = {\n  totalCount: number,\n  latestPosts: [],\n};\n\nconst Icon: React.FC<IconPropTypes> = ({ href, icon }) => (\n  <a\n    target=\"_blank\"\n    href={href}\n    rel=\"external nofollow noopener noreferrer\"\n    className=\"custom-icon\"\n  >\n    <span className=\"fa-layers fa-fw fa-2x\">\n      <FontAwesomeIcon icon={icon} />\n    </span>\n  </a>\n);\n\nconst Sidebar : React.FC<SidebarPropTypes> = ({ totalCount = 0, latestPosts = [] }) => (\n  <header className=\"intro-header site-heading text-center col-xl-2 col-lg-3 col-xs-12 order-lg-1\">\n    <div className=\"about-me\">\n      <Link to={about} className=\"name\">\n        <img className=\"avatar\" src={iconUrl} alt=\"Calpa\" />\n        <h4>{name}</h4>\n      </Link>\n      <Icon\n        href={github.url}\n        icon={['fab', 'github']}\n      />\n      <Icon href={`mailto:${email}`} icon={['far', 'envelope']} />\n      <Information totalCount={totalCount} posts={latestPosts} />\n    </div>\n  </header>\n);\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      fragment cardData on MarkdownRemark {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          url: slug\n          date\n          tags\n          description\n          headerImage\n        }\n      }\n\n      query SidebarQuery {\n        all: allMarkdownRemark {\n          totalCount\n        }\n\n        limited: allMarkdownRemark(\n          sort: { frontmatter: { date: DESC } }\n          limit: 6\n        ) {\n          latestPosts: edges {\n            node {\n              ...cardData\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Sidebar {...data.all} {...data.limited} />}\n  />\n);\n","// s = Small Square (90×90)\n// b = Big Square (160×160)\n// t = Small Thumbnail (160×160)\n// m = Medium Thumbnail (320×320)\n// l = Large Thumbnail (640×640)\n// h = Huge Thumbnail (1024×1024)\nconst defaultPicture = 'M795H8A.jpg';\n\nconst mapping = {\n  'small-square': 's',\n  'big-square': 'b',\n  small: 't',\n  medium: 'm',\n  large: 'l',\n  huge: 'h',\n};\n\nconst parseImgur = (rawImage: string, size: keyof typeof mapping = 'large') => {\n  if (!rawImage) {\n    return `https://i.imgur.com/${defaultPicture}`;\n  }\n\n  // Don't resize the png image\n  // as there is a transparent bug in imgur\n  if (rawImage.match('(png)|(gif)')) {\n    // Prevent double http url\n    if (rawImage.match('http')) {\n      return rawImage;\n    }\n    return `https://i.imgur.com/${rawImage}`;\n  }\n\n  const resizedImage = rawImage.replace(/(.*)\\.(.*)/, `$1${mapping[size]}.$2`);\n  // Prevent double http url\n  if (resizedImage.match('http')) {\n    return resizedImage;\n  }\n  return `https://i.imgur.com/${resizedImage}`;\n};\n\nconst parseTitle = (title: string, text: string) => `title=\"${title || text}\"`;\n\nconst parseImageTag = ({ href, title, text }: {href: string, title: string, text: string}) => `<img class=\"lozad d-block mx-auto\" data-src=${parseImgur(\n  href,\n  'large',\n)} ${parseTitle(title, text)} />`;\n\nconst getGalleryImage = ({ href, title, text }: {href: string, title: string, text: string}) => `<a data-fancybox=\"gallery\" href=\"${parseImgur(\n  href,\n  'huge',\n)}\">${parseImageTag({ href, title, text })}</a>`;\n\nexport {\n  parseImgur,\n  parseImageTag,\n  getGalleryImage,\n};\n","import dayjs from 'dayjs';\nimport config from '../../configs';\n\nconst { maxPostsInPage } = config;\n\n// Prevent webpack window problem\nconst isBrowser = () => typeof window !== 'undefined';\n\nconst getPageNumber = () => {\n  const pathname = window.location.pathname?.match(/page[/](\\d)/);\n  let pageNumber = -1;\n  if(pathname && pathname?.length > 1){\n    pageNumber = + pathname[1]\n  }\n  return isBrowser() ? pageNumber : -1;\n}\n\nconst getCurrentPage = () => {\n  if (isBrowser() === true) {\n    const str = window.location.pathname;\n    if (str.indexOf('page') !== -1) {\n      // Return the last pathname in number\n      return getPageNumber();\n    }\n  }\n\n  return 0;\n};\n\nconst getPath = () => (isBrowser() ? window.location.pathname : '');\n\nconst getMaxPages = (amount: number) => Math.ceil(amount / maxPostsInPage);\n\n// Array.fill() is added by trial and error\nconst getPages = (amount: number) => new Array(amount).fill(0).map((_, index) => `/page/${index + 1}`);\n\nconst overflow = () => getCurrentPage() === getMaxPages(0);\n\nconst parseDate = (date: string) => dayjs(date).format('YYYY/MM/DD');\n\nconst parseChineseDate = (date: string) => dayjs(date).format('DD/MM/YYYY');\n\nexport {\n  isBrowser,\n  getCurrentPage,\n  getMaxPages,\n  getPages,\n  overflow,\n  parseDate,\n  parseChineseDate,\n  getPath,\n  getPageNumber,\n};\n","import React, { useEffect } from 'react';\nimport lozad from 'lozad';\n\nimport { isBrowser } from '../../utils';\n\ntype PropTypes = {\n  post: string,\n};\nconst Content: React.FC<PropTypes> = ({ post}) => {\n  useEffect(()=> {\n    if (isBrowser()) {\n      // Initialize library\n      const observer = lozad('.lozad', {\n        load(el: any) {\n          /* eslint-disable no-param-reassign */\n          el.src = el.dataset.src;\n          el.onload = () => {\n            el.classList.add('animated');\n            el.classList.add('fadeIn');\n          };\n          /* eslint-enable */\n        },\n      });\n      observer.observe();\n    }\n  }, []);\n  return (\n    <div\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML={{ __html: post }}\n      style={{\n        padding: 30,\n        background: 'white',\n      }}\n    />\n  );\n}\n\nexport default Content;\n","import React from 'react';\nimport './index.scss';\n\n\nimport { parseImgur } from '../../utils/image';\n\ntype PropTypes = {\n  img: string,\n  title: string,\n  subTitle: string,\n  authorName?: string,\n  authorImage?: string,\n};\nconst Header: React.FC<PropTypes> = ({\n  img = '',\n  title = '',\n  subTitle = '',\n  authorImage = '',\n  authorName = '',\n}) => (\n  <div className=\"col-12 header\" style={{ padding: 0 }} id=\"header\">\n    <div\n      className=\"img-container\"\n      style={{\n        backgroundImage: `linear-gradient( rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2) ), url(${img})`,\n        marginTop: -58,\n      }}\n    >\n      {title && <h1 className=\"u-title\">{title}</h1>}\n      {subTitle && (\n        <div className=\"u-subtitle\">\n          <div className=\"m-left\">\n            {authorImage && (\n              <img\n                src={parseImgur(authorImage, 'small-square')}\n                className=\"author-image\"\n                alt={authorName}\n              />\n            )}\n            <span className=\"author-name\">{authorName}</span>\n          </div>\n          <span className=\"text\">{subTitle}</span>\n        </div>\n      )}\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { graphql } from 'gatsby';\n\nimport 'gitalk/dist/gitalk.css';\n\nimport { parseChineseDate } from '../utils';\n\nimport ExternalLink from '../components/ExternalLink';\nimport Sidebar from '../components/Sidebar';\nimport Content from '../components/Content';\nimport SEO from '../components/SEO';\n\nimport Header from '../components/Header';\n\nimport ShareBox from '../components/ShareBox';\n\nimport config from '../../configs';\n\n// Styles\nimport './blog-post.scss';\n\nconst { name, iconUrl, gitalk } = config;\n\nconst bgWhite = { padding: '10px 30px', background: 'white' };\n\n// Prevent webpack window problem\nconst isBrowser = typeof window !== 'undefined';\nconst Gitalk = isBrowser ? require('gitalk') : undefined;\n\nclass BlogPost extends Component {\n  constructor(props) {\n    super(props);\n    this.data = this.props.data;\n  }\n\n  componentDidMount() {\n    const { frontmatter, id: graphqlId } = this.data.content.edges[0].node;\n    const { title, slug } = frontmatter;\n\n    const GitTalkInstance = new Gitalk({\n      ...gitalk,\n      title,\n      id: slug||graphqlId,\n    });\n    GitTalkInstance.render('gitalk-container');\n  }\n\n  render() {\n    const { node } = this.data.content.edges[0];\n\n    const {\n      html, frontmatter, fields, excerpt,\n    } = node;\n\n    const { slug } = fields;\n\n    const { date, headerImage, title } = frontmatter;\n\n    return (\n      <div className=\"row post order-2\">\n        <Header\n          img={headerImage || 'https://i.imgur.com/ym0oGXc.jpg'}\n          title={title}\n          authorName={name}\n          authorImage={iconUrl}\n          subTitle={parseChineseDate(date)}\n        />\n        <Sidebar />\n        <div className=\"col-xl-7 col-lg-6 col-md-12 col-sm-12 order-10 content\">\n          <Content post={html} />\n          <div className=\"m-message\" style={bgWhite}>\n            <ExternalLink\n              href={ config.github.url }\n              title=\"关注我的 Github\"\n            />\n            。\n          </div>\n\n          <div id=\"gitalk-container\" />\n        </div>\n\n        <ShareBox url={slug} />\n\n        <SEO\n          title={title}\n          url={slug}\n          siteTitleAlt=\"Calpa's Blog\"\n          isPost={false}\n          description={excerpt}\n          image={headerImage || 'https://i.imgur.com/M795H8A.jpg'}\n        />\n      </div>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  fragment post on MarkdownRemark {\n    fields {\n      slug\n    }\n    frontmatter {\n      title\n      slug\n      date\n      headerImage\n    }\n  }\n\n  query BlogPostQuery($index: Int) {\n    content: allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      skip: $index\n      limit: 1\n    ) {\n      edges {\n        node {\n          id\n          html\n          excerpt\n          ...post\n        }\n\n        previous {\n          ...post\n        }\n\n        next {\n          ...post\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogPost;\n","/*! lozad.js - v1.16.0 - 2020-09-06\n* https://github.com/ApoorvSaxena/lozad.js\n* Copyright (c) 2020 Apoorv Saxena; Licensed MIT */\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):t.lozad=e()}(this,function(){\"use strict\";\n/**\n   * Detect IE browser\n   * @const {boolean}\n   * @private\n   */var g=\"undefined\"!=typeof document&&document.documentMode,f={rootMargin:\"0px\",threshold:0,load:function(t){if(\"picture\"===t.nodeName.toLowerCase()){var e=t.querySelector(\"img\"),r=!1;null===e&&(e=document.createElement(\"img\"),r=!0),g&&t.getAttribute(\"data-iesrc\")&&(e.src=t.getAttribute(\"data-iesrc\")),t.getAttribute(\"data-alt\")&&(e.alt=t.getAttribute(\"data-alt\")),r&&t.append(e)}if(\"video\"===t.nodeName.toLowerCase()&&!t.getAttribute(\"data-src\")&&t.children){for(var a=t.children,o=void 0,i=0;i<=a.length-1;i++)(o=a[i].getAttribute(\"data-src\"))&&(a[i].src=o);t.load()}t.getAttribute(\"data-poster\")&&(t.poster=t.getAttribute(\"data-poster\")),t.getAttribute(\"data-src\")&&(t.src=t.getAttribute(\"data-src\")),t.getAttribute(\"data-srcset\")&&t.setAttribute(\"srcset\",t.getAttribute(\"data-srcset\"));var n=\",\";if(t.getAttribute(\"data-background-delimiter\")&&(n=t.getAttribute(\"data-background-delimiter\")),t.getAttribute(\"data-background-image\"))t.style.backgroundImage=\"url('\"+t.getAttribute(\"data-background-image\").split(n).join(\"'),url('\")+\"')\";else if(t.getAttribute(\"data-background-image-set\")){var d=t.getAttribute(\"data-background-image-set\").split(n),u=d[0].substr(0,d[0].indexOf(\" \"))||d[0];// Substring before ... 1x\nu=-1===u.indexOf(\"url(\")?\"url(\"+u+\")\":u,1===d.length?t.style.backgroundImage=u:t.setAttribute(\"style\",(t.getAttribute(\"style\")||\"\")+\"background-image: \"+u+\"; background-image: -webkit-image-set(\"+d+\"); background-image: image-set(\"+d+\")\")}t.getAttribute(\"data-toggle-class\")&&t.classList.toggle(t.getAttribute(\"data-toggle-class\"))},loaded:function(){}};function A(t){t.setAttribute(\"data-loaded\",!0)}var m=function(t){return\"true\"===t.getAttribute(\"data-loaded\")},v=function(t){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:document;return t instanceof Element?[t]:t instanceof NodeList?t:e.querySelectorAll(t)};return function(){var r,a,o=0<arguments.length&&void 0!==arguments[0]?arguments[0]:\".lozad\",t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},e=Object.assign({},f,t),i=e.root,n=e.rootMargin,d=e.threshold,u=e.load,g=e.loaded,s=void 0;\"undefined\"!=typeof window&&window.IntersectionObserver&&(s=new IntersectionObserver((r=u,a=g,function(t,e){t.forEach(function(t){(0<t.intersectionRatio||t.isIntersecting)&&(e.unobserve(t.target),m(t.target)||(r(t.target),A(t.target),a(t.target)))})}),{root:i,rootMargin:n,threshold:d}));for(var c,l=v(o,i),b=0;b<l.length;b++)(c=l[b]).getAttribute(\"data-placeholder-background\")&&(c.style.background=c.getAttribute(\"data-placeholder-background\"));return{observe:function(){for(var t=v(o,i),e=0;e<t.length;e++)m(t[e])||(s?s.observe(t[e]):(u(t[e]),A(t[e]),g(t[e])))},triggerLoad:function(t){m(t)||(u(t),A(t),g(t))},observer:s}}});\n"],"names":["_ref2","url","title","config","description","image","siteTitleAlt","isPost","React","Helmet","name","content","type","JSON","stringify","_ref","alternateName","itemListElement","position","item","headline","schemaOrgJSONLD","property","CommentButton","className","style","lineHeight","color","paddingLeft","href","onClick","FontAwesomeIcon","icon","hasCommentBox","friends","map","friend","ExternalLink","key","rel","posts","node","toUrl","frontmatter","_node$frontmatter","slug","fields","Link","to","totalCount","LatestPost","Friend","github","email","iconUrl","about","Icon","target","Sidebar","latestPosts","src","alt","Information","StaticQuery","query","render","data","all","limited","mapping","small","medium","large","huge","parseImgur","rawImage","size","match","resizedImage","replace","maxPostsInPage","isBrowser","window","parseChineseDate","date","dayjs","format","post","useEffect","lozad","load","el","dataset","onload","classList","add","observe","dangerouslySetInnerHTML","__html","padding","background","img","subTitle","authorImage","authorName","id","backgroundImage","marginTop","gitalk","bgWhite","Gitalk","require","undefined","props","componentDidMount","graphqlId","this","edges","html","excerpt","headerImage","ShareBox","SEO","Component","module","exports","g","document","documentMode","f","rootMargin","threshold","t","nodeName","toLowerCase","e","querySelector","r","createElement","getAttribute","append","children","a","o","i","length","poster","setAttribute","n","split","join","d","u","substr","indexOf","toggle","loaded","A","m","v","arguments","Element","NodeList","querySelectorAll","Object","assign","root","s","IntersectionObserver","forEach","intersectionRatio","isIntersecting","unobserve","c","l","b","triggerLoad","observer"],"sourceRoot":""}